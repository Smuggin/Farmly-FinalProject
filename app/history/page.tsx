// app/history/page.tsx
"use client";

import { useSession } from "next-auth/react";
import { useEffect, useState } from "react";
import OrderCard from "@/components/OrderCard";

const tabs = ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á", "‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö", "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å/‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"];

const HistoryPage = () => {
  const { data: session, status } = useSession();
  const [selectedTab, setSelectedTab] = useState("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
  const [orders, setOrders] = useState<any[]>([]);
  const [loading, setLoading] = useState(true); // üëà add loading state

  useEffect(() => {
    if (status === "authenticated") {
      setLoading(true); // start loading
      fetch("/api/orders")
        .then((res) => res.json())
        .then((data) => {
          if (Array.isArray(data)) {
            setOrders(data);
          } else {
            console.error("Invalid response from /api/orders:", data);
            setOrders([]);
          }
        })
        .catch((err) => {
          console.error("Error loading orders:", err);
          setOrders([]);
        })
        .finally(() => setLoading(false)); // stop loading
    }
  }, [status]);

  if (status === "loading") return <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>;
  if (status === "unauthenticated") return <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>;

  const filteredOrders =
    selectedTab === "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ? orders : orders.filter((order) => order.status === selectedTab);

  return (
    <div className="px-8">
      <h1 className="text-2xl font-bold mb-4">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h1>

      <div className="flex gap-2 mb-4">
        {tabs.map((tab) => (
          <button
            key={tab}
            className={`px-4 py-2 rounded-lg ${
              selectedTab === tab ? "bg-green-500 text-white" : "bg-gray-200 text-black"
            }`}
            onClick={() => setSelectedTab(tab)}
          >
            {tab}
          </button>
        ))}
      </div>

      <div className="space-y-4">
        {loading ? (
          // üëá Skeleton placeholders
          Array.from({ length: 3 }).map((_, i) => (
            <div key={i} className="animate-pulse border p-4 rounded-md space-y-2">
              <div className="h-4 bg-gray-300 rounded w-1/4" />
              <div className="h-3 bg-gray-300 rounded w-1/2" />
              <div className="h-3 bg-gray-300 rounded w-3/4" />
            </div>
          ))
        ) : filteredOrders.length > 0 ? (
          filteredOrders.map((order) => <OrderCard key={order.id} {...order} />)
        ) : (
          <p className="text-gray-500 text-center">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ</p>
        )}
      </div>
    </div>
  );
};

export default HistoryPage;
